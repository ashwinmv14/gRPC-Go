version: '3.8'

services:
  # Ad Event Processor Server
  ad-event-processor:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"   # gRPC server
      - "9090:9090"   # Metrics
    environment:
      - AEP_DATABASE_TYPE=file
      - AEP_LOGGING_LEVEL=info
      - AEP_SERVER_HOST=0.0.0.0
      - AEP_SERVER_PORT=8080
      - AEP_BATCH_SIZE=100
      - AEP_BATCH_FLUSH_INTERVAL=5s
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./configs:/app/configs
    depends_on:
      - redis
      - mongodb
    networks:
      - ad-event-network
    restart: unless-stopped

  # Redis for caching and storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ad-event-network
    restart: unless-stopped

  # MongoDB for document storage
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=ad_events
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ad-event-network
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - ad-event-network
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - ad-event-network
    restart: unless-stopped

  # Load testing tool
  load-tester:
    build:
      context: .
      dockerfile: Dockerfile.client
    depends_on:
      - ad-event-processor
    networks:
      - ad-event-network
    profiles:
      - testing
    command: ["./client", "-server=ad-event-processor:8080", "-mode=load", "-events=10000", "-concurrent=50"]

networks:
  ad-event-network:
    driver: bridge

volumes:
  redis_data:
  mongodb_data:
  prometheus_data:
  grafana_data: